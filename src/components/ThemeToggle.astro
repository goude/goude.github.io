---
// src/components/ThemeToggle.astro
---

<style>
  .theme-toggle {
    background: none;
    border: none;
    font-size: 1.5rem;
    cursor: pointer;
    padding: 0.25rem;
    color: inherit;
    display: flex;
    align-items: center;
  }

  .theme-toggle:hover {
    opacity: 0.7;
  }
</style>

<button class="theme-toggle" id="theme-toggle" aria-label="Toggle theme">
  <span id="theme-icon">○</span>
</button>

<script is:inline>
  (function () {
    const themeToggle = document.getElementById("theme-toggle");
    const themeIcon = document.getElementById("theme-icon");

    // Get stored preference or system preference
    function getInitialTheme() {
      const stored = localStorage.getItem("theme");
      if (stored) {
        return stored;
      }
      // Check system preference
      if (
        window.matchMedia &&
        window.matchMedia("(prefers-color-scheme: dark)").matches
      ) {
        return "dark";
      }
      return "light";
    }

    // Apply theme to document
    function applyTheme(theme) {
      if (theme === "dark") {
        document.documentElement.setAttribute("data-theme-dark", "");
      } else {
        document.documentElement.removeAttribute("data-theme-dark");
      }
      updateIcon(theme);
    }

    // Update icon based on theme
    function updateIcon(theme) {
      themeIcon.textContent = theme === "dark" ? "●" : "○";
    }

    // Toggle between themes
    function toggleTheme() {
      const currentTheme = document.documentElement.hasAttribute(
        "data-theme-dark",
      )
        ? "dark"
        : "light";
      const newTheme = currentTheme === "dark" ? "light" : "dark";

      localStorage.setItem("theme", newTheme);
      applyTheme(newTheme);
    }

    // Set initial theme immediately (before page renders)
    const initialTheme = getInitialTheme();
    applyTheme(initialTheme);

    // Add click listener
    themeToggle.addEventListener("click", toggleTheme);

    // Listen for system theme changes (optional enhancement)
    if (window.matchMedia) {
      window
        .matchMedia("(prefers-color-scheme: dark)")
        .addEventListener("change", (e) => {
          // Only auto-update if user hasn't set a manual preference
          if (!localStorage.getItem("theme")) {
            applyTheme(e.matches ? "dark" : "light");
          }
        });
    }
  })();
</script>
