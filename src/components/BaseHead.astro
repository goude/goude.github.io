---
import "../styles/tufte.css";
/*
import "../styles/tufte-extra.css";
import "../styles/pandoc.css";
import "../styles/pandoc-solarized.css";
*/

export interface Props {
  title: string;
  description: string;
  permalink: string;
}

const { title, description, permalink } = Astro.props;
// FIXME: using ! for now
const socialUrl = Astro.site!.href + "assets/social.png";
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width" />
<!--
<link rel="icon" type="image/x-icon" href="/favicon.ico" />
-->
<link rel="icon" type="image/svg+xml" href="/assets/min-off.svg" />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={permalink} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={socialUrl} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={permalink} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={socialUrl} />

<!-- Syntax Highlighting -->
<link
  href="https://cdn.jsdelivr.net/npm/prismjs@1/themes/prism.css"
  rel="stylesheet"
/>

<script
  is:inline
  defer
  src="https://cdn.jsdelivr.net/npm/prismjs@1/components/prism-core.min.js"
></script>

<script
  is:inline
  defer
  src="https://cdn.jsdelivr.net/npm/prismjs@1/plugins/autoloader/prism-autoloader.min.js"
></script>

<script is:inline>
  window.Prism = window.Prism || {};
  Prism.plugins = Prism.plugins || {};
  Prism.plugins.autoloader = {
    languages_path: "https://cdn.jsdelivr.net/npm/prismjs@1/components/",
  };
</script>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    console.log("YOYO");
    document.querySelectorAll("pre > code:not([class])").forEach((el) => {
      el.classList.add("language-js"); // or 'language-text' for neutral
    });
    Prism.highlightAll(); // re-run after adding classes
  });
</script>
