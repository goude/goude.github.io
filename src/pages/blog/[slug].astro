---
import BaseLayout from "../../layouts/BaseLayout.astro";
import getPostData from "../../utils/getPostData";

type MarkdownPost = {
  frontmatter: { title: string; publishDate: string; [key: string]: any };
  Content: any;
  file: string;
  rawContent: () => string;
};

export const getStaticPaths = async () => {
  const modules = import.meta.glob("../../data/blog-posts/*.md");
  const posts: MarkdownPost[] = await Promise.all(
    Object.entries(modules).map(async ([file, resolver]) => {
      const modulePost = (await resolver()) as MarkdownPost;
      // Create a new object that copies all properties from modulePost
      // and adds the file property.
      const postWithFile: MarkdownPost = Object.assign({}, modulePost, {
        file,
      });
      return postWithFile;
    }),
  );
  return posts.map((p) => ({
    params: { slug: p.file.split("/").pop()!.split(".").shift()! },
    props: { post: p },
  }));
};

const { Content, frontmatter } = Astro.props.post;
const { title, description, publishDate } = frontmatter;
const { slug, readingTime } = getPostData(Astro.props.post);
const permalink = `${Astro.site!.href}blog/${slug}`;
---

<BaseLayout
  title={title}
  description={description}
  permalink={permalink}
  current="blog"
>
  <section>
    <h1>{title}</h1>
    <p>
      {new Date(publishDate).toISOString().split("T")[0]} ~ {readingTime}
    </p>
  </section>
  <Content />
</BaseLayout>
